---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
    component: monitoring
    part-of: membo-monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5601"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        # docker.elastic.co/kibana/kibana:8.11.1
        image: docker.elastic.co/kibana/kibana:8.11.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5601
          name: kibana-ui
          protocol: TCP
        - containerPort: 5602
          name: monitoring
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        env:
        - name: SERVER_NAME
          value: kibana.membo.ai
        - name: ELASTICSEARCH_HOSTS
          value: https://elasticsearch:9200
        - name: ELASTICSEARCH_USERNAME
          value: kibana_system
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: ELASTIC_PASSWORD
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        - name: XPACK_MONITORING_ENABLED
          value: "true"
        - name: SERVER_SSL_ENABLED
          value: "true"
        - name: SERVER_SSL_CERTIFICATE
          value: /usr/share/kibana/config/certs/kibana.crt
        - name: SERVER_SSL_KEY
          value: /usr/share/kibana/config/certs/kibana.key
        - name: SERVER_SSL_CERTIFICATE_AUTHORITIES
          value: /usr/share/kibana/config/certs/ca.crt
        volumeMounts:
        - name: kibana-certs
          mountPath: /usr/share/kibana/config/certs
          readOnly: true
        - name: kibana-data
          mountPath: /usr/share/kibana/data
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          periodSeconds: 20
          timeoutSeconds: 5
      volumes:
      - name: kibana-certs
        secret:
          secretName: app-secrets
          items:
          - key: kibana.key
            path: kibana.key
            mode: 0600
          - key: kibana.crt
            path: kibana.crt
            mode: 0644
          - key: ca.crt
            path: ca.crt
            mode: 0644
      - name: kibana-data
        persistentVolumeClaim:
          claimName: kibana-data
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: monitoring
  labels:
    app: kibana
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: kibana-ui
    port: 5601
    targetPort: 5601
    protocol: TCP
  - name: kibana-monitoring
    port: 5602
    targetPort: 5602
    protocol: TCP
  selector:
    app: kibana
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kibana-data
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard